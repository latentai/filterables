name: Commit Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.13"
          - "3.12"
          - "3.11"
          - "3.10"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          uv venv
          uv pip install .[dev]

      - name: Run Mypy
        run: uv run mypy src

  format:
    name: Formatting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.13"
          - "3.12"
          - "3.11"
          - "3.10"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          uv venv
          uv pip install .[dev]

      - name: Run Ruff
        run: uv run ruff check


  test-maria:
    name: Testing (MariaDB)
    runs-on: ubuntu-latest
    services:
      maria:
        image: mariadb:11.8
        env:
          MARIADB_ROOT_PASSWORD: root
        ports:
          - 6033:3306
        options: >-
          --health-cmd="healthcheck.sh --connect --innodb_initialized"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    strategy:
      matrix:
        python:
          - "3.13"
          - "3.12"
          - "3.11"
          - "3.10"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python }}

      - name: Install Dependencies
        run: |
          uv venv
          uv pip install .[dev]

      - name: Run Tests
        run: uv run pytest -vvv -s
        env:
          FILTERABLES_DATABASE_URI: mysql+pymysql://root:root@localhost:6033/mysql

  test-mssql:
    name: Testing (MS SQL)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - "3.13"
          - "3.12"
          - "3.11"
          - "3.10"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python }}

      - name: Install Dependencies
        run: |
          uv venv
          uv pip install .[dev]

      - name: Install SQL Server
        uses: potatoqualitee/mssqlsuite@v1.11
        with:
          install: sqlengine
          sa-password: latentai.I0

      - name: Run Tests
        run: uv run pytest -vvv -s
        env:
          FILTERABLES_DATABASE_URI: mssql+pymssql://sa:latentai.I0@localhost:1433/tempdb

  test-mysql:
    name: Testing (MySQL)
    runs-on: ubuntu-latest
    services:
      maria:
        image: mysql:8.4
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    strategy:
      matrix:
        python:
          - "3.13"
          - "3.12"
          - "3.11"
          - "3.10"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python }}

      - name: Install Dependencies
        run: |
          uv venv
          uv pip install .[dev]

      - name: Run Tests
        run: uv run pytest -vvv -s
        env:
          FILTERABLES_DATABASE_URI: mysql+pymysql://root:root@localhost:3306/mysql

  test-postgresql:
    name: Testing (PostgreSQL)
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    strategy:
      matrix:
        python:
          - "3.13"
          - "3.12"
          - "3.11"
          - "3.10"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python }}

      - name: Install Dependencies
        run: |
          uv venv
          uv pip install .[dev]

      - name: Run Tests
        run: uv run pytest -vvv -s
        env:
          FILTERABLES_DATABASE_URI: postgresql+psycopg2://postgres:postgres@localhost:5432/postgres

  test-sqlite:
    name: Testing (SQLite)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - "3.13"
          - "3.12"
          - "3.11"
          - "3.10"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python }}

      - name: Install Dependencies
        run: |
          uv venv
          uv pip install .[dev]

      - name: Run Tests
        run: uv run pytest -vvv -s
